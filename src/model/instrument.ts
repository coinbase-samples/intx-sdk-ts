/**
 * Copyright 2025-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { InstrumentMode } from './enums/instrumentMode';
import { InstrumentQuote } from './instrumentQuote';
import { InstrumentTradingState } from './enums/instrumentTradingState';
import { InstrumentType } from './enums/instrumentType';

export type Instrument = {
  /**
   * A unique integer identifier to represent the instrument
   */
  instrumentId?: string;
  /**
   * A UUID to represent the instrument
   */
  instrumentUuid?: string;
  /**
   * A human readable representation of the instrument
   */
  symbol?: string;
  type?: InstrumentType;
  mode?: InstrumentMode;
  /**
   * The identifier of the base asset
   */
  baseAssetId?: string;
  /**
   * A UUID to represent the base asset
   */
  baseAssetUuid?: string;
  /**
   * The name of the base asset
   */
  baseAssetName?: string;
  /**
   * The identifier of the quote asset
   */
  quoteAssetId?: string;
  /**
   * A UUID to represent the quote asset
   */
  quoteAssetUuid?: string;
  /**
   * The name of the quote asset
   */
  quoteAssetName?: string;
  /**
   * The minimum allowed quantity change of the base asset
   */
  baseIncrement?: string;
  /**
   * The minimum allowed price change of the quote asset
   */
  quoteIncrement?: string;
  /**
   * The max percentage from BBO permitted for order placement
   */
  priceBandPercent?: number;
  /**
   * The percentage from BBO used to price bound market orders
   */
  marketOrderPercent?: number;
  /**
   * The qty traded over the last 24hr period
   */
  qty24hr?: string;
  /**
   * The notional amount in USDC traded over the last 24hr period
   */
  notional24hr?: string;
  /**
   * The 30 day average daily traded qty updated daily
   */
  avgDailyQty?: string;
  /**
   * The 30 day average daily traded notional amount in USDC updated daily
   */
  avgDailyNotional?: string;
  /**
   * The traded qty in the previous day (It gets disseminated daily around 12am UTC.)
   */
  previousDayQty?: string;
  /**
   * The total number of active positions held by traders
   */
  openInterest?: string;
  /**
   * The max qty allowed for a position
   */
  positionLimitQty?: string;
  /**
   * The max percentage of ADQ allowed for a position
   */
  positionLimitAdqPct?: number;
  /**
   * The max notional value allowed for a position
   */
  positionNotionalLimit?: string;
  /**
   * The total notional value of active positions held by traders
   */
  openInterestNotionalLimit?: string;
  /**
   * The replacement cost used in the margin calculations
   */
  replacementCost?: string;
  /**
   * The margin requirement corresponding to maximum allowed leverage when trading on margin
   */
  baseImf?: number;
  /**
   * The margin requirement needed to exceed the high leverage position restrictions
   */
  defaultImf?: number;
  /**
   * The smallest notional amount in USDC allowed to place an order
   */
  minNotionalValue?: string;
  /**
   * The amount of time in nanoseconds between funding intervals
   */
  fundingInterval?: string;
  tradingState?: InstrumentTradingState;
  quote?: InstrumentQuote;
  /**
   * The multiply factor to indicate the number of units in one contract
   */
  baseAssetMultiplier?: string;
  /**
   * The type of the underlying asset. Value can be INDEX when underlying asset represents an index or SPOT when underlying asset is a spot.
   */
  underlyingType?: string;
};
