/**
 * Copyright 2025-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { TransferStatus } from './enums/transferStatus';
import { TransferType } from './enums/transferType';
import { TransferFromPortfolio } from './transferFromPortfolio';
import { TransferToPortfolio } from './transferToPortfolio';

export type Transfer = {
  /**
   * A unique identifier for the transfer
   */
  transferUuid?: string;
  transferType?: TransferType;
  /**
   * The amount of the asset being transferred
   */
  amount?: string;
  /**
   * The asset being transferred
   */
  asset?: string;
  status?: TransferStatus;
  /**
   * The common name of the network on which the transfer occurred
   */
  networkName?: string;
  /**
   * The time the transfer was created
   */
  createdAt?: Date;
  /**
   * The time of the most recent status change of the transfer
   */
  updatedAt?: Date;
  fromPortfolio?: TransferFromPortfolio;
  toPortfolio?: TransferToPortfolio;
  /**
   * blockchain address of transfer source
   */
  fromAddress?: string;
  /**
   * blockchain address of transfer target
   */
  toAddress?: string;
  /**
   * Coinbase account Id of transfer source
   */
  fromCbAccount?: string;
  /**
   * Coinbase account Id of transfer target
   */
  toCbAccount?: string;
  /**
   * Coinbase counterparty Id of transfer source if it is a counterparty transfer
   */
  fromCounterpartyId?: string;
  /**
   * Coinbase counterparty Id of transfer target if it is a counterparty transfer
   */
  toCounterpartyId?: string;
  /**
   * The unique identifier of the instrument associated with the funding event
   */
  instrumentId?: string;
  /**
   * The name of the instrument associated with the funding event
   */
  instrumentSymbol?: string;
  /**
   * transaction hash associated with an on-chain deposit or on-chain withdrawal
   */
  txnHash?: string;
  /**
   * id of the position used to calculate the funding payment
   */
  positionId?: string;
};
