/**
 * Copyright 2025-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { OrderSide } from './enums/orderSide';
import { OrderType } from './enums/orderType';
import { SelfTradePreventionMode } from './enums/selfTradePreventionMode';
import { TimeInForce } from './enums/timeInForce';

export type PreviewOrderRequest = {
  side: OrderSide;
  /**
   * The amount in base asset units
   */
  size: string;
  tif?: TimeInForce;
  /**
   * The name, ID, or UUID of the instrument the order wants to transact
   */
  instrument: string;
  type: OrderType;
  /**
   * The max or min price limit in quote asset units to buy or sell at (respectively). Only used for limit and stop limit order types.
   */
  price?: string;
  /**
   * The market price that activates a stop order
   */
  stopPrice?: string;
  /**
   * The limit price at which the TP/SL stop leg order will be placed. Only used for TP/SL order type.
   */
  stopLimitPrice?: string;
  /**
   * The expiration time required for orders with the time in force set to GTT. Must not go beyond 30 days of the current time. Uses ISO-8601 format (e.g., 2023-03-16T23:59:53Z).
   */
  expireTime?: Date;
  /**
   * The ID or UUID of the portfolio the order belongs to (uses default portfolio if not defined)
   */
  portfolio: string;
  stpMode?: SelfTradePreventionMode;
  /**
   * Only submit the order if it will rest on the order book
   */
  postOnly?: boolean;
  /**
   * Only submit the order if it will close an existing order
   */
  closeOnly?: boolean;
};
