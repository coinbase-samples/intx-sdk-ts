/**
 * Copyright 2025-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { AlgoStrategy } from './enums/algoStrategy';
import { OrderEventType } from './enums/orderEventType';
import { OrderSide } from './enums/orderSide';
import { OrderStatus } from './enums/orderStatus';
import { OrderType } from './enums/orderType';
import { SelfTradePreventionMode } from './enums/selfTradePreventionMode';
import { TimeInForce } from './enums/timeInForce';

export type OrderResult = {
  /**
   * A unique identifier assigned by the exchange
   */
  orderId?: string;
  /**
   * A unique identifier assigned by the client
   */
  clientOrderId?: string;
  side?: OrderSide;
  /**
   * The unique identifier of the instrument the order wants to transact in
   */
  instrumentId?: string;
  /**
   * The UUID of the instrument the order wants to transact in
   */
  instrumentUuid?: string;
  /**
   * The name of the instrument the order wants to transact in
   */
  symbol?: string;
  /**
   * The unique identifier of the portfolio the order was submitted under
   */
  portfolioId?: string;
  /**
   * The UUID of the portfolio the order was submitted under
   */
  portfolioUuid?: string;
  type?: OrderType;
  /**
   * The max or min price limit in quote asset units to buy or sell at (respectively). Only used for limit and stop limit order types.
   */
  price?: string;
  /**
   * The market price that activates a stop order
   */
  stopPrice?: string;
  /**
   * The limit price at which the TP/SL stop leg order will be placed. Only used for TP/SL order type.
   */
  stopLimitPrice?: string;
  /**
   * The amount in base asset units
   */
  size?: string;
  tif?: TimeInForce;
  /**
   * The expiration time for orders with the time in force set to GTT. Uses ISO-8601 format (e.g., 2023-03-16T23:59:53Z).
   */
  expireTime?: Date;
  stpMode?: SelfTradePreventionMode;
  eventType?: OrderEventType;
  eventTime?: Date;
  submitTime?: Date;
  orderStatus?: OrderStatus;
  /**
   * The amount of the order remaining open on the exchange
   */
  leavesQty?: string;
  /**
   * The traded quantity on the order
   */
  execQty?: string;
  /**
   * The average price that the order has traded at so far
   */
  avgPrice?: string;
  /**
   * The exchange fee affiliated with the trade (only for trade events)
   */
  fee?: string;
  /**
   * Indicates that the order was submitted with the `post_only` instruction
   */
  postOnly?: boolean;
  /**
   * Indicates that the order was submitted with the `close_only` instruction
   */
  closeOnly?: boolean;
  algoStrategy?: AlgoStrategy;
  /**
   * A text message that gets populated for canceled orders
   */
  text?: string;
};
