/**
 * Copyright 2025-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { OrderSide } from './enums/orderSide';
import { OrderStatus } from './enums/orderStatus';
import { SelfTradePreventionMode } from './enums/selfTradePreventionMode';
import { Source } from './enums/source';
import { TimeInForce } from './enums/timeInForce';

export type PortfolioFill = {
  /**
   * The unique identifier of the portfolio the fill was executed under
   */
  portfolioId?: string;
  /**
   * The UUID of the portfolio the fill was executed under
   */
  portfolioUuid?: string;
  /**
   * The name of the portfolio the fill was executed under
   */
  portfolioName?: string;
  /**
   * A unique identifier for the fill event
   */
  fillId?: string;
  /**
   * A unique fill_id represented in numeric format
   */
  execId?: string;
  /**
   * The original order id
   */
  orderId?: string;
  /**
   * The unique identifier of the instrument the fill is in
   */
  instrumentId?: string;
  /**
   * The UUID of the instrument the fill is in
   */
  instrumentUuid?: string;
  /**
   * Name of the instrument the fill is in
   */
  symbol?: string;
  /**
   * A unique identifier for the match event that is used on both sides of the trade
   */
  matchId?: string;
  /**
   * The price that this fill traded at
   */
  fillPrice?: string;
  /**
   * The amount traded in this fill event
   */
  fillQty?: string;
  /**
   * The API key of the client that submitted the order
   */
  clientId?: string;
  /**
   * The client specific order ID sent on the order
   */
  clientOrderId?: string;
  /**
   * The quantity specified on the order
   */
  orderQty?: string;
  /**
   * The limit price specified on the order (specific to limit orders)
   */
  limitPrice?: string;
  /**
   * The total amount filled on the order so far
   */
  totalFilled?: string;
  /**
   * The weighted average price of the total amount filled on the order so far
   */
  filledVwap?: string;
  /**
   * The expiration time for orders with the time in force set to GTT. Uses ISO-8601 format (e.g., 2023-03-16T23:59:53Z).
   */
  expireTime?: Date;
  /**
   * The trigger price for a stop order (specific to stop orders)
   */
  stopPrice?: string;
  side?: OrderSide;
  tif?: TimeInForce;
  stpMode?: SelfTradePreventionMode;
  /**
   * Additional order flags
   */
  flags?: string;
  /**
   * The fee charged on the fill
   */
  fee?: string;
  /**
   * The asset type the fee was charged in
   */
  feeAsset?: string;
  orderStatus?: OrderStatus;
  /**
   * The time that the fill event occurred. Uses ISO-8601 format (e.g., 2023-03-16T23:59:53Z)
   */
  eventTime?: Date;
  source?: Source;
};
